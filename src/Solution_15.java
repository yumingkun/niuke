/** * Created by mingkunyu on 2019-09-01 * 反转链表 */public class Solution_15 {    class ListNode {        int val;        ListNode next = null;        ListNode(int val) {            this.val = val;        }    }    /**     * 定义3个指针，分别指向当前遍历到的结点、它的前一个结点及后一个结点。在遍历过程中，首先记录当前节点的后一个节点，     * 然后将当前节点的后一个节点指向前一个节点，其次前一个节点再指向当前节点，最后再将当前节点指向最初记录的后一个节点，、     * 如此反复，直到当前节点的后一个节点为NULL时，则代表当前节点时反转后的头结点了。     * @param head     * @return     */    public ListNode ReverseList(ListNode head) {        ListNode cur = head;        ListNode pre = null;        ListNode next = null;        while (cur != null) {            next = cur.next;            cur.next = pre;            pre = cur;            cur = next;        }        return pre;    }}