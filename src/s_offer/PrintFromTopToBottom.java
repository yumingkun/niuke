package s_offer;import java.util.ArrayList;import java.util.LinkedList;import java.util.Queue;/** * Created by mingkunyu on 2019-11-15 * * 从上往下打印出二叉树的每个节点，同层节点从左至右打印。 * * *     1 *    / \ *   2  3 *  /\ / \ * 4 5 6  7 * * * * */public class PrintFromTopToBottom {    public class TreeNode {        int val = 0;        TreeNode left = null;        TreeNode right = null;        public TreeNode(int val) {            this.val = val;        }    }    public ArrayList<Integer> PrintFromTopToBottom(TreeNode root) {        ArrayList<TreeNode> queue=new ArrayList<>();        ArrayList<Integer> list=new ArrayList<>();        if (root==null) return list;        queue.add(root);        while (queue.size()>0){            TreeNode tNode=queue.remove(0);            if (tNode.left!=null){                queue.add(tNode.left);            }            if (tNode.right!=null){                queue.add(tNode.right);            }            list.add(tNode.val);        }        return list;    }}