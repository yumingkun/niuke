package s_offer;import java.util.ArrayList;/** * Created by mingkunyu on 2019-11-20 * <p> * 输入一棵二叉搜索树，将该二叉搜索树转换成一个排序的双向链表。 * 要求不能创建任何新的结点，只能调整树中结点指针的指向。 */public class Convert {    public class TreeNode {        int val = 0;        TreeNode left = null;        TreeNode right = null;        public TreeNode(int val) {            this.val = val;        }    }    public TreeNode Convert(TreeNode pRootOfTree) {        if (pRootOfTree == null) return null;        ArrayList<TreeNode> list = new ArrayList<>();        orderPrint(pRootOfTree, list);        return update(list);    }    /**     * 中序遍历     *     * @param head     * @param list     */    private void orderPrint(TreeNode head, ArrayList<TreeNode> list) {        if (head.left != null) {            orderPrint(head.left, list);        }        list.add(head);        if (head.right != null) {            orderPrint(head.right, list);        }    }    /**     * 遍历list，修改指针     */    private TreeNode update(ArrayList<TreeNode> list) {        for (int i = 0; i < list.size() - 1; i++) {            list.get(i).right = list.get(i + 1);            list.get(i + 1).left = list.get(i);        }        return list.get(0);    }}