package s_offer;import java.util.ArrayList;/** * Created by mingkunyu on 2019-11-19 * 输入一颗二叉树的跟节点和一个整数，打印出二叉树中结点值的和为输入整数的所有路径。 * 路径定义为从树的根结点开始往下一直到叶结点所经过的结点形成一条路径。(注意: 在返回值的list中，数组长度大的数组靠前) */public class FindPath {    public class TreeNode {        int val = 0;        TreeNode left = null;        TreeNode right = null;        public TreeNode(int val) {            this.val = val;        }    }    ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>>();    ArrayList<Integer> path = new ArrayList<>();    public ArrayList<ArrayList<Integer>> FindPath(TreeNode root, int target) {        if (root == null) return result;        path.add(root.val);        target -= root.val;        if (target == 0 && root.left == null && root.right == null) {            result.add(new ArrayList<>(path));        } else {            FindPath(root.left, target);            FindPath(root.right, target);        }        path.remove(path.size() - 1);//移除最后一个元素，深度遍历完一条路径后要回退        return result;    }}