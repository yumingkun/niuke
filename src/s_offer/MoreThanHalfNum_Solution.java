package s_offer;import java.util.Arrays;import java.util.stream.IntStream;/** * 链接：https://www.nowcoder.com/questionTerminal/e8a1b01a2df14cb2b228b30ee6a92163?answerType=1&f=discussion * 来源：牛客网 * <p> * 思路：用一般的排序也可以完成这道题目，但是如果那样完成的话就可能太简单了。 * 用preValue记录上一次访问的值，count表明当前值出现的次数，如果下一个值和当前值相同那么count++； * 如果不同count--，减到0的时候就要更换新的preValue值了，因为如果存在超过数组长度一半的值，那么最后preValue一定会是该值。 */public class MoreThanHalfNum_Solution {    public int MoreThanHalfNum_Solution(int[] array) {        int preValue = array[0];        int count = 1;        for (int i = 1; i < array.length; i++) {            if (array[i] == preValue) {                count++;            } else {                count--;                if (count == 0) {                    preValue = array[i];                    count = 1;                }            }        }        int num = 0;//需要判断是否真的是大于1半数        for (int j = 0; j < array.length; j++)            if (array[j] == preValue)                num++;        return (num > array.length / 2) ? preValue : 0;    }}